Another note:
  MuPAD is buggy as fuck, and frequent restarts are required if your code suddenly stops working, or weird errors appear.

Just a note:
  ':' suppresses output
  ';' displays output 

Assignments:
====================================================
Identifiers = variables
Note that identifiers have to start with a letter. 
Assignments uses the ':=' operator, similar to pascal.

a := "My name";


                                 "My name"
b2 := (x^2)*3/(Hy^3);


                                      2
                                   3 x
                                   ----
                                      3
                                    Hy
A2b := A*2*b;


                                   2 A b

If an identifier has not been assigned a value, it evaluates to itself:

x2;


                                    x2

but

x2 := a + b;

                                   a + b

x2

                                   a + b
To clear an identifier:

delete(x)

To save there are two steps:

Step 1: Set your WRITEPATH variable
  WRITEPATH := "C:\\MuPAD";
Note the double \\
Another note is that this directory SHOULD ALREADY EXIST.

Step 2: Use the protocol command
  protocol("ex.1");

Lol. You can also just click File -> Save as...

Protocol() is readable for users but NOT for MuPAD.

To make it readable for MuPAD use the command:

write("temp.out"); 

This is readable by MuPAD, but not a text editor, to enable reading with a text editor use the command:

write(Text,"temp.out");

To read:
Step 1: Set READPATH:
  READPATH := "C:\\MuPAD";
Note the double \\
Another note is that this directory SHOULD ALREADY EXIST.

Step 2: Use the read() command:
  read("ex.2");

To research commands: fclose, fopen, fread, fprint, ftextinput

NB, a bit of a tangent, but how to access the Help Facility.
  Help->Browse Manual->Search->Display

Types.
MuPAD type allocation is done implicityly and the type of a variable can change during the session.

Until an identifier is set, it is a type identifier of type DOM_IDENT.

You can test this with:
domtype(a);
where a is an unassigned indentifier.

DOM_RAT
DOM_FLOAT

No storage limit or significant figures limit, to set e.g.: use the variable DIGITS which has a default of 10 signi fig
  DIGITS:=100:float(PI);
I = sqrt(-1)

a: = 2 + 3*I: domtype(a);

DOM_COMPLEX

ac: = 2 - 3*I: b: = a*ac; domtype(b)
13
DOM_INT

A string is anything closed in " "

a: = "I am a string": domtype(a);
DOM_STRING

Identifiers can be TRUE or FALSE if a boolean:
DOM_BOOL

A list is an ordered sequence in square brackets of any number of expressions of different types:
x: = [2.0, I,7, x^2]: domtype(x);
DOM_LIST

Indexing of a list starts at 1:
x[1]; x[3];
2.0
7

Elements can be removed from a list and new elements can be inserted. Details are given in help.

A set is a collection of different elements in curly brackets. Unlke a list, there isno concept of the order of the elements, and repeats are not possible:

a: = {1,2, x^2, x^3, 2, x^2}; domtype(a);
{1,2, x^2, x^3}
DOM_SET

The usual binary operators union, intersect, and minus are defined for sets e.g.:

a: = {1, 2, x}: b: = {1,2, x^2}:
a union b;
{1, 2, x, x^2}

The function contains() checks if an element is a memer of a set. Details in online help. Fuck me ig.

The type most often used in MuPAD is DOM_EXPR e.g.:

y: = 1 + x^2: domtype(y);
DOM_EXPR

Other types

DOM_ARRAY
DOM_TABLE
DOM_PROC
DOM_POLY

Excersises: TODO

![image](https://github.com/user-attachments/assets/e69785cb-9ee9-46f0-bb85-c4bbbecd206e)
